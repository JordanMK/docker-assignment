name: Continuous Deployment Pipeline

on:
  push:
    branches:
      - main
      - dev

jobs:
  deploy-to-docker-hub:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: jordanvives
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Frontend dev
        if: github.ref == 'refs/heads/dev'
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: jordanvives/taskfyer:dev

      - name: Build and Push Backend dev
        if: github.ref == 'refs/heads/dev'
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: jordanvives/taskfyer-api:dev

      - name: Build and Push Frontend prod
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: jordanvives/taskfyer:latest

      - name: Build and Push Backend prod
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: jordanvives/taskfyer-api:latest

  deploy-to-oracle-cluster:
    runs-on: ubuntu-latest
    env: 
      OCI_CLI_USER: ${{ secrets.OCI_USER }}
      OCI_CLI_TENANCY: ${{ secrets.OCI_TENANCY }}
      OCI_CLI_FINGERPRINT: ${{ secrets.OCI_FINGERPRINT }}
      OCI_CLI_KEY_CONTENT: ${{ secrets.OCI_API_KEY }}
      OCI_CLI_REGION: ${{ secrets.OCI_REGION }}

    steps:
      - name: Retrieve Code
        uses: actions/checkout@v2

      - name: Set up KUBECONFIG
        uses: oracle-actions/configure-kubectl-oke@v1.5.0
        with:
          cluster: ${{ secrets.OCI_CLUSTER_ID }}

      - name: Verify KUBECONFIG
        run: |
          kubectl get nodes

      - name: Install Helm
        uses: azure/setup-helm@v1
        with:
          version: 'v3.5.4'

      - name: Deploy to Dev Environment
        if: github.ref == 'refs/heads/dev'
        run: |
          helm upgrade --install taskfyer-dev helm/charts/taskfyer -f helm/charts/taskfyer/values/values.dev.yaml -n taskfyer-dev --create-namespace

      - name: Deploy to Production Environment
        if: github.ref == 'refs/heads/main'
        run: |
          helm upgrade --install taskfyer-prod helm/charts/taskfyer -f helm/charts/taskfyer/values/values.prod.yaml -n taskfyer-prod --create-namespace
